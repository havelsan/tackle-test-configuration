
plugins {
    id 'application'
    id 'java'
    id 'jacoco'
}

tasks.withType(Zip).all {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
tasks.withType(Tar).all {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

repositories {
    mavenCentral()
}

configurations {
    jacocoInstrumentation
}
dependencies {

jacocoInstrumentation group: 'org.jacoco', name: 'org.jacoco.ant', version: '0.8.7', classifier: 'nodeps'

//dependencies from class files:

  implementation files('/home/emircan/.local/share/pipx/venvs/tkltest/lib/python3.12/site-packages/tkltest-lib/hamcrest-all-1.3.jar')  
  implementation files('/home/emircan/.local/share/pipx/venvs/tkltest/lib/python3.12/site-packages/tkltest-lib/org.jacoco.cli-0.8.7-nodeps.jar')  
  implementation files('/home/emircan/.local/share/pipx/venvs/tkltest/lib/python3.12/site-packages/tkltest-lib/org.jacoco.agent-0.8.7.jar')  
  implementation files('/home/emircan/.local/share/pipx/venvs/tkltest/lib/python3.12/site-packages/tkltest-lib/evosuite-standalone-runtime-v1.2.0.jar')  
  implementation files('/home/emircan/.local/share/pipx/venvs/tkltest/lib/python3.12/site-packages/tkltest-lib/evosuite-master-v1.2.0.jar')  
  implementation files('/home/emircan/.local/share/pipx/venvs/tkltest/lib/python3.12/site-packages/tkltest-lib/junit-4.13.1.jar')  
//we compile only the test files, so during compilation time, we add dependencies to the app class path:

    testCompileOnly files('/home/emircan/projects/Tetris/build/classes/java/main') 
//when running the tests, we use the app classes, can be instrumented/not-instrumented classes

    testRuntimeOnly files('/home/emircan/projects/Tetris/build/classes/java/main') 
}

task cleanInstrumentDir(){
    delete '/home/emircan/projects/Tetris/tkltest-output-unit-Tetris/Tetris-instrumented-classes'
}

//we are using jacoco.ant to do the offline instrumentation
task instrument() {
    dependsOn cleanInstrumentDir
    ext.outputDir = '/home/emircan/projects/Tetris/tkltest-output-unit-Tetris/Tetris-instrumented-classes'
    doLast {
        ant.taskdef(name: 'instrument',
                classname: 'org.jacoco.ant.InstrumentTask',
                classpath: configurations.jacocoInstrumentation.asPath)
        ant.instrument(destdir: outputDir) {
        
            fileset(dir: '/home/emircan/projects/Tetris/build/classes/java/main') 
        }
    }
}

task cleanUnitReportDir(){
    delete '/home/emircan/projects/Tetris/tkltest-output-unit-Tetris/Tetris-tkltest-reports/junit-reports'
}

sourceSets.test.java.srcDirs = [

    '/home/emircan/projects/Tetris/tkltest-output-unit-Tetris/Tetris-ctd-amplified-tests', 
]

test {
//with offline instrumentation, the test also depend on the instrument class:
  dependsOn cleanUnitReportDir 
  reports {
    html.destination = file('/home/emircan/projects/Tetris/tkltest-output-unit-Tetris/Tetris-tkltest-reports/junit-reports')
    junitXml.destination = file('/home/emircan/projects/Tetris/tkltest-output-unit-Tetris/Tetris-tkltest-reports/junit-reports')
  }
  jacoco{
    destinationFile = file('/home/emircan/projects/Tetris/tkltest-output-unit-Tetris/Tetris-tkltest-build-artifacts/jacoco.exec')
  }
  ignoreFailures = true
}

task cleanCoverageReportDir(){
    delete '/home/emircan/projects/Tetris/tkltest-output-unit-Tetris/Tetris-tkltest-reports/jacoco-reports/Tetris-ctd-amplified-tests'
}

jacocoTestReport {
    dependsOn cleanCoverageReportDir, test
    reports{
        xml.required = true
        csv.required = true
        html.outputLocation = file('/home/emircan/projects/Tetris/tkltest-output-unit-Tetris/Tetris-tkltest-reports/jacoco-reports/Tetris-ctd-amplified-tests')
        xml.outputLocation = file('/home/emircan/projects/Tetris/tkltest-output-unit-Tetris/Tetris-tkltest-reports/jacoco-reports/Tetris-ctd-amplified-tests/jacoco.xml')
        csv.outputLocation = file('/home/emircan/projects/Tetris/tkltest-output-unit-Tetris/Tetris-tkltest-reports/jacoco-reports/Tetris-ctd-amplified-tests/jacoco.csv')
    }
    afterEvaluate {
        classDirectories.setFrom(
        
            fileTree(dir:'/home/emircan/projects/Tetris/build/classes/java/main' , include: '/**/*.class' ),  
        )
    }
}

task tklest_task(){
    dependsOn clean, jacocoTestReport
}