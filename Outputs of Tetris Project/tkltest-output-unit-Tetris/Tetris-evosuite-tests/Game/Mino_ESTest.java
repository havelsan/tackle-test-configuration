/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 12 09:48:17 GMT 2024
 */

package Game;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Game.Mino;
import java.awt.Graphics;
import java.awt.Point;
import javax.swing.DebugGraphics;
import javax.swing.JToggleButton;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Mino_ESTest extends Mino_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Mino mino0 = new Mino(1);
      mino0.reverseRotate();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Mino mino0 = new Mino(5);
      mino0.rotate(5);
      mino0.reverseRotate();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Mino mino0 = new Mino(100);
      mino0.rotate(100);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Mino mino0 = new Mino(4);
      mino0.reverseRotate();
      mino0.rotate(4);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Mino mino0 = new Mino(2);
      mino0.reverseRotate();
      mino0.reverseRotate();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Mino mino0 = new Mino(5);
      mino0.reverseRotate();
      mino0.rotate(5);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Mino mino0 = new Mino(266);
      // Undeclared exception!
      try { 
        mino0.drawInQueue((Graphics) null, 266, 1198);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Game.Mino", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Mino mino0 = new Mino(1565);
      // Undeclared exception!
      try { 
        mino0.draw((Graphics) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Game.Mino", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Mino mino0 = new Mino(7);
      mino0.reverseRotate();
      mino0.rotate(529);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Mino mino0 = new Mino(6);
      mino0.reverseRotate();
      mino0.rotate(10);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Mino mino0 = new Mino(4);
      JToggleButton jToggleButton0 = new JToggleButton("^)ggS(f/W)T%0?");
      Point point0 = jToggleButton0.getLocation();
      mino0.move(point0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Mino mino0 = new Mino(3);
      mino0.reverseRotate();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Mino mino0 = new Mino(2);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      // Undeclared exception!
      try { 
        mino0.drawInQueue(debugGraphics0, 2, (-1));
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Mino mino0 = new Mino(1);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      // Undeclared exception!
      try { 
        mino0.drawInQueue(debugGraphics0, (-1), 1);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Mino mino0 = new Mino((-11));
      Mino mino1 = new Mino(mino0, true);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Mino mino0 = new Mino(5);
      Mino mino1 = new Mino(mino0, false);
  }
}
