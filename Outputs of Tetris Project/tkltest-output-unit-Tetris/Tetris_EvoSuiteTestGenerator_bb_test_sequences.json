{
  "test_sequences" : {
    "Game.Mino" : {
      "sequences" : [ "{\n    Mino mino0 = new Mino(100);\n    mino0.rotate(100);\n}", "{\n    Mino mino0 = new Mino(2);\n    mino0.reverseRotate();\n    mino0.reverseRotate();\n}", "{\n    Mino mino0 = new Mino((-11));\n    Mino mino1 = new Mino(mino0, true);\n}", "{\n    Mino mino0 = new Mino(4);\n    mino0.reverseRotate();\n    mino0.rotate(4);\n}", "{\n    Mino mino0 = new Mino(5);\n    mino0.reverseRotate();\n    mino0.rotate(5);\n}", "{\n    Mino mino0 = new Mino(5);\n    Mino mino1 = new Mino(mino0, false);\n}", "{\n    Mino mino0 = new Mino(6);\n    mino0.reverseRotate();\n    mino0.rotate(10);\n}", "{\n    Mino mino0 = new Mino(7);\n    mino0.reverseRotate();\n    mino0.rotate(529);\n}", "{\n    Mino mino0 = new Mino(4);\n    JToggleButton jToggleButton0 = new JToggleButton(\"^)ggS(f/W)T%0?\");\n    Point point0 = jToggleButton0.getLocation();\n    mino0.move(point0);\n}", "{\n    Mino mino0 = new Mino(266);\n    // Undeclared exception!\n    try {\n        mino0.drawInQueue((Graphics) null, 266, 1198);\n    } catch (NullPointerException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"Game.Mino\", e);\n    }\n}", "{\n    Mino mino0 = new Mino(1);\n    DebugGraphics debugGraphics0 = new DebugGraphics();\n    // Undeclared exception!\n    try {\n        mino0.drawInQueue(debugGraphics0, (-1), 1);\n    } catch (NullPointerException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"javax.swing.DebugGraphics\", e);\n    }\n}", "{\n    Mino mino0 = new Mino(3);\n    mino0.reverseRotate();\n}", "{\n    Mino mino0 = new Mino(1);\n    mino0.reverseRotate();\n}", "{\n    Mino mino0 = new Mino(5);\n    mino0.rotate(5);\n    mino0.reverseRotate();\n}", "{\n    Mino mino0 = new Mino(1565);\n    // Undeclared exception!\n    try {\n        mino0.draw((Graphics) null);\n    } catch (NullPointerException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"Game.Mino\", e);\n    }\n}", "{\n    Mino mino0 = new Mino(2);\n    DebugGraphics debugGraphics0 = new DebugGraphics();\n    // Undeclared exception!\n    try {\n        mino0.drawInQueue(debugGraphics0, 2, (-1));\n    } catch (NullPointerException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"javax.swing.DebugGraphics\", e);\n    }\n}" ],
      "imports" : [ "Game.Mino", "static org.junit.Assert.assertNull", "javax.swing.JToggleButton", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "java.awt.Point", "static org.junit.Assert.*", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "javax.swing.DebugGraphics", "java.awt.Graphics", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "Game.StatsPanel" : {
      "sequences" : [ "{\n    StatsPanel statsPanel0 = new StatsPanel();\n    DebugGraphics debugGraphics0 = new DebugGraphics();\n    // Undeclared exception!\n    try {\n        statsPanel0.paintComponent(debugGraphics0);\n    } catch (NullPointerException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"javax.swing.DebugGraphics\", e);\n    }\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "Game.StatsPanel", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "javax.swing.DebugGraphics", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "Game.Ghost" : {
      "sequences" : [ "{\n    Mino mino0 = new Mino(4);\n    Ghost ghost0 = new Ghost(mino0);\n}" ],
      "imports" : [ "Game.Mino", "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "Game.Ghost", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "Game.GamePanel" : {
      "sequences" : [ "{\n    GamePanel gamePanel0 = null;\n    try {\n        gamePanel0 = new GamePanel((JFrame) null);\n    } catch (NullPointerException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"Game.GamePanel\", e);\n    }\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals", "javax.swing.JFrame", "Game.GamePanel" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "Game._Lancher" : {
      "sequences" : [ "{\n    _Lancher _Lancher0 = new _Lancher();\n}", "{\n    String[] stringArray0 = new String[0];\n    // Undeclared exception!\n    try {\n        _Lancher.main(stringArray0);\n    } catch (NullPointerException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"Game.WindowLanch\", e);\n    }\n}" ],
      "imports" : [ "Game._Lancher", "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "Game.About" : {
      "sequences" : [ "{\n    About about0 = new About();\n}" ],
      "imports" : [ "Game.About", "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "Game.GameOver" : {
      "sequences" : [ "{\n    GameOver gameOver0 = new GameOver(148, 148, 662, 148, 1019, 1019, 662, (-2041), 662, 148);\n}", "{\n    GameOver gameOver0 = new GameOver((-1232), (-1678), 3906, 0, 1483, (-1678), 3906, (-1232), 3906, 9);\n}", "{\n    GameOver gameOver0 = new GameOver(4, 4, 4, 4, (-30), 879, 0, 2321, (-1), (-30));\n    Color color0 = Color.RED;\n    GameOver.ScoreTablePanel gameOver_ScoreTablePanel0 = gameOver0.new ScoreTablePanel(color0);\n    // Undeclared exception!\n    try {\n        gameOver_ScoreTablePanel0.paintComponent((Graphics) null);\n    } catch (NullPointerException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"Game.GameOver$ScoreTablePanel\", e);\n    }\n}" ],
      "imports" : [ "java.awt.Color", "Game.GameOver", "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "java.awt.Graphics", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "Game.MinoQueue" : {
      "sequences" : [ "{\n    MinoQueue minoQueue0 = new MinoQueue();\n    Mino mino0 = minoQueue0.getHeld();\n}", "{\n    MinoQueue minoQueue0 = new MinoQueue();\n    minoQueue0.setHeld((Mino) null);\n}", "{\n    MinoQueue minoQueue0 = new MinoQueue();\n    Mino mino0 = minoQueue0.newMino();\n}", "{\n    MinoQueue minoQueue0 = new MinoQueue();\n    minoQueue0.shiftUp();\n}" ],
      "imports" : [ "Game.Mino", "static org.junit.Assert.assertNull", "Game.MinoQueue", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "Game.Score" : {
      "sequences" : [ "{\n    Score score0 = new Score(\"\", 2194);\n    String string0 = score0.getPlayer();\n}", "{\n    Score score0 = new Score(\"\", 2516);\n    int int0 = score0.getScore();\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "Game.Score", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "Game.Timer" : {
      "sequences" : [ "{\n    Timer timer0 = new Timer();\n    String string0 = timer0.toString();\n}", "{\n    Timer timer0 = new Timer();\n    timer0.update();\n    timer0.update();\n}", "{\n    Timer timer0 = new Timer();\n    // Undeclared exception!\n    try {\n        timer0.paintComponent((Graphics) null);\n    } catch (NullPointerException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"javax.swing.JComponent\", e);\n    }\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "Game.Timer", "java.awt.Graphics", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "Game.MatrixElement" : {
      "sequences" : [ "{\n    SystemColor systemColor0 = SystemColor.menuText;\n    MatrixElement matrixElement0 = new MatrixElement(systemColor0, (Point) null);\n    MatrixElement matrixElement1 = null;\n    try {\n        matrixElement1 = new MatrixElement(matrixElement0);\n    } catch (NullPointerException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"Game.MatrixElement\", e);\n    }\n}", "{\n    Color color0 = Color.BLUE;\n    MatrixElement matrixElement0 = new MatrixElement(color0, (Point) null);\n    // Undeclared exception!\n    try {\n        matrixElement0.draw((Graphics) null, (-1));\n    } catch (NullPointerException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"Game.MatrixElement\", e);\n    }\n}" ],
      "imports" : [ "java.awt.Color", "static org.junit.Assert.assertNull", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "java.awt.Point", "static org.junit.Assert.*", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "java.awt.Graphics", "static org.junit.Assert.assertEquals", "Game.MatrixElement", "java.awt.SystemColor" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "Game.Vue" : {
      "sequences" : [ "{\n    // Undeclared exception!\n    try {\n        Vue.restart();\n    } catch (NullPointerException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"Game.Vue\", e);\n    }\n}", "{\n    // Undeclared exception!\n    try {\n        Vue.stop();\n    } catch (NullPointerException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"Game.Vue\", e);\n    }\n}", "{\n    // Undeclared exception!\n    try {\n        Vue.start();\n    } catch (NullPointerException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"Game.Vue\", e);\n    }\n}", "{\n    Vue vue0 = null;\n    try {\n        vue0 = new Vue();\n    } catch (HeadlessException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"java.awt.GraphicsEnvironment\", e);\n    }\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "java.awt.HeadlessException", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals", "Game.Vue" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "Game.WindowLanch" : {
      "sequences" : [ "{\n    WindowLanch windowLanch0 = new WindowLanch(1144);\n    WindowLanch.Exit windowLanch_Exit0 = null;\n    try {\n        windowLanch_Exit0 = windowLanch0.new Exit();\n    } catch (HeadlessException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"java.awt.GraphicsEnvironment\", e);\n    }\n}", "{\n    WindowLanch windowLanch0 = null;\n    try {\n        windowLanch0 = new WindowLanch();\n    } catch (NullPointerException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"Game.WindowLanch\", e);\n    }\n}", "{\n    WindowLanch windowLanch0 = new WindowLanch((-2232));\n    WindowLanch.Efait windowLanch_Efait0 = null;\n    try {\n        windowLanch_Efait0 = windowLanch0.new Efait((-2232), (JFrame) null);\n    } catch (HeadlessException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"java.awt.GraphicsEnvironment\", e);\n    }\n}", "{\n    WindowLanch windowLanch0 = new WindowLanch(550);\n    // Undeclared exception!\n    try {\n        windowLanch0.paintComponent((Graphics) null);\n    } catch (NullPointerException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"javax.swing.JComponent\", e);\n    }\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "Game.WindowLanch", "java.awt.Graphics", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "java.awt.HeadlessException", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals", "javax.swing.JFrame" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "Game.Help" : {
      "sequences" : [ "{\n    Help help0 = new Help();\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "Game.Help", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "Game.NavigationBar" : {
      "sequences" : [ "{\n    NavigationBar navigationBar0 = new NavigationBar();\n    JButton jButton0 = navigationBar0.soundToggle;\n    ActionEvent actionEvent0 = new ActionEvent(\"x.#Dbfq~}_jJ8w2S#\", 0, \"KVDt4&C&&Ay>a\", 0);\n    actionEvent0.setSource(jButton0);\n    // Undeclared exception!\n    try {\n        navigationBar0.actionPerformed(actionEvent0);\n    } catch (NullPointerException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"Game.NavigationBar\", e);\n    }\n}", "{\n    NavigationBar navigationBar0 = new NavigationBar();\n    JButton jButton0 = navigationBar0.getMenuButton();\n    ActionEvent actionEvent0 = new ActionEvent(jButton0, (-1962), \"   Help    \", (-1962));\n    // Undeclared exception!\n    try {\n        navigationBar0.actionPerformed(actionEvent0);\n    } catch (NullPointerException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"Game.NavigationBar\", e);\n    }\n}", "{\n    NavigationBar navigationBar0 = new NavigationBar();\n    ActionEvent actionEvent0 = new ActionEvent(navigationBar0, 0, \"x.#Dbfq~}_jJ8w2S#\", 0);\n    navigationBar0.actionPerformed(actionEvent0);\n}" ],
      "imports" : [ "javax.swing.JButton", "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "Game.NavigationBar", "static org.junit.Assert.assertEquals", "java.awt.event.ActionEvent" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "Game.GameElementPanel" : {
      "sequences" : [ "{\n    Mino mino0 = new Mino((-516));\n    GameElementPanel gameElementPanel0 = new GameElementPanel(mino0);\n}", "{\n    GameElementPanel gameElementPanel0 = new GameElementPanel(\"\", 70);\n}", "{\n    GameElementPanel gameElementPanel0 = new GameElementPanel(\"3z&E;*$jNcBf\", 0);\n}", "{\n    GameElementPanel gameElementPanel0 = new GameElementPanel((String) null, 1);\n}", "{\n    GameElementPanel gameElementPanel0 = new GameElementPanel();\n}" ],
      "imports" : [ "Game.Mino", "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals", "Game.GameElementPanel" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "Game.QueuePanel" : {
      "sequences" : [ "{\n    QueuePanel queuePanel0 = null;\n    try {\n        queuePanel0 = new QueuePanel();\n    } catch (NullPointerException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"Game.QueuePanel\", e);\n    }\n}" ],
      "imports" : [ "Game.QueuePanel", "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "Game.HighScoreManager" : {
      "sequences" : [ "{\n    HighScoreManager highScoreManager0 = new HighScoreManager((-1379));\n    Vector<Score> vector0 = new Vector<Score>();\n    Score score0 = new Score(\"Game.Score\", (-2425));\n    boolean boolean0 = vector0.add(score0);\n    Score score1 = new Score(\"+-'6^+\", (-1379));\n    // Undeclared exception!\n    try {\n        highScoreManager0.setListe(vector0, score1, (-2425));\n    } catch (ArrayIndexOutOfBoundsException e) {\n        // \n        // Array index out of range: 1\n        // \n        verifyException(\"java.util.Vector\", e);\n    }\n}", "{\n    HighScoreManager highScoreManager0 = new HighScoreManager(0);\n    // Undeclared exception!\n    try {\n        highScoreManager0.updateScoreFile((Boolean) null);\n    } catch (NullPointerException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"Game.HighScoreManager\", e);\n    }\n}", "{\n    HighScoreManager highScoreManager0 = new HighScoreManager(\"\");\n    boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();\n    highScoreManager0.updateScoreFile((Boolean) null);\n}", "{\n    HighScoreManager highScoreManager0 = new HighScoreManager(\"\");\n    Vector<Score> vector0 = new Vector<Score>();\n    Score score0 = new Score(\"\", 0);\n    boolean boolean0 = vector0.add(score0);\n    // Undeclared exception!\n    try {\n        highScoreManager0.setListe(vector0, score0, (-1746));\n    } catch (ArrayIndexOutOfBoundsException e) {\n        // \n        // Array index out of range: 1\n        // \n        verifyException(\"java.util.Vector\", e);\n    }\n}", "{\n    HighScoreManager highScoreManager0 = new HighScoreManager(\"\");\n    Boolean boolean0 = Boolean.valueOf(\"^.`9R{6M|rAx\");\n    highScoreManager0.updateScoreFile(boolean0);\n    highScoreManager0.loadScoreFile();\n}", "{\n    HighScoreManager highScoreManager0 = new HighScoreManager(\"\");\n    Boolean boolean0 = Boolean.TRUE;\n    highScoreManager0.updateScoreFile(boolean0);\n}", "{\n    HighScoreManager highScoreManager0 = new HighScoreManager(\"\");\n    highScoreManager0.loadScoreFile();\n}", "{\n    HighScoreManager highScoreManager0 = new HighScoreManager(\"Game.Score\");\n    Boolean boolean0 = Boolean.valueOf(\"\");\n    highScoreManager0.updateScoreFile(boolean0);\n    // Undeclared exception!\n    try {\n        highScoreManager0.loadScoreFile();\n    } catch (NullPointerException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"java.io.ObjectInputStream$PeekInputStream\", e);\n    }\n}", "{\n    HighScoreManager highScoreManager0 = new HighScoreManager(\"\");\n    HighScoreManager highScoreManager1 = new HighScoreManager(0);\n    Boolean boolean0 = Boolean.valueOf(\"Game.Score\");\n    highScoreManager0.updateScoreFile(boolean0);\n    highScoreManager1.updateScoreFile(boolean0);\n}", "{\n    HighScoreManager highScoreManager0 = new HighScoreManager(2564);\n    // Undeclared exception!\n    try {\n        highScoreManager0.getListe(2564);\n    } catch (NullPointerException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"java.io.ObjectInputStream$PeekInputStream\", e);\n    }\n}" ],
      "imports" : [ "java.util.Vector", "static org.junit.Assert.assertNull", "Game.HighScoreManager", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.testdata.FileSystemHandling", "org.evosuite.runtime.EvoRunner", "Game.Score", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "Game.ChooseLevel" : {
      "sequences" : [ "{\n    ChooseLevel chooseLevel0 = new ChooseLevel();\n    chooseLevel0.Choose1();\n}", "{\n    ChooseLevel chooseLevel0 = new ChooseLevel();\n    JButton jButton0 = chooseLevel0.getRestartButton();\n}", "{\n    ChooseLevel chooseLevel0 = new ChooseLevel();\n    chooseLevel0.setBackImage((Image) null);\n}", "{\n    ChooseLevel chooseLevel0 = new ChooseLevel();\n    int int0 = chooseLevel0.getId();\n}", "{\n    ChooseLevel chooseLevel0 = new ChooseLevel();\n    JButton jButton0 = chooseLevel0.getResumeButton();\n}", "{\n    ChooseLevel chooseLevel0 = new ChooseLevel();\n    JButton jButton0 = chooseLevel0.getHardLevel();\n}", "{\n    ChooseLevel chooseLevel0 = new ChooseLevel();\n    DebugGraphics debugGraphics0 = new DebugGraphics();\n    // Undeclared exception!\n    try {\n        chooseLevel0.paintComponent(debugGraphics0);\n    } catch (NullPointerException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"javax.swing.DebugGraphics\", e);\n    }\n}", "{\n    ChooseLevel chooseLevel0 = new ChooseLevel();\n    chooseLevel0.Choose2();\n}", "{\n    ChooseLevel chooseLevel0 = new ChooseLevel();\n    JButton jButton0 = chooseLevel0.getMediumLevel();\n}", "{\n    ChooseLevel chooseLevel0 = new ChooseLevel();\n    JButton jButton0 = chooseLevel0.getEasyLevel();\n}" ],
      "imports" : [ "javax.swing.JButton", "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "java.awt.Image", "Game.ChooseLevel", "org.evosuite.runtime.EvoRunner", "javax.swing.DebugGraphics", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "Game.Option" : {
      "sequences" : [ "{\n    Option option0 = new Option();\n    JButton jButton0 = option0.getUndecoratedButton();\n}", "{\n    Option option0 = new Option();\n    Object object0 = option0.getTreeLock();\n    ActionEvent actionEvent0 = new ActionEvent(object0, 32767, \"jieN)Z:q+.;3DO#qu\");\n    option0.actionPerformed(actionEvent0);\n}", "{\n    Option option0 = new Option();\n    JButton jButton0 = option0.getHighScoreButton();\n}", "{\n    Option option0 = new Option();\n    DebugGraphics debugGraphics0 = new DebugGraphics();\n    option0.draw(debugGraphics0);\n}", "{\n    Option option0 = new Option();\n    option0.efait();\n}", "{\n    Option option0 = new Option();\n    // Undeclared exception!\n    try {\n        option0.paintComponent((Graphics) null);\n    } catch (NullPointerException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"javax.swing.JComponent\", e);\n    }\n}" ],
      "imports" : [ "javax.swing.JButton", "static org.junit.Assert.assertNull", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "org.junit.Test", "static org.junit.Assert.*", "java.awt.event.ActionEvent", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "javax.swing.DebugGraphics", "Game.Option", "java.awt.Graphics", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    },
    "Game.HighScore" : {
      "sequences" : [ "{\n    HighScore highScore0 = null;\n    try {\n        highScore0 = new HighScore();\n    } catch (NullPointerException e) {\n        // \n        // no message in exception (getMessage() returned null)\n        // \n        verifyException(\"Game.HighScore\", e);\n    }\n}" ],
      "imports" : [ "static org.junit.Assert.assertNull", "org.evosuite.runtime.EvoRunnerParameters", "org.evosuite.runtime.EvoRunner", "org.junit.runner.RunWith", "static org.evosuite.runtime.EvoAssertions.*", "Game.HighScore", "org.junit.Test", "static org.junit.Assert.*", "static org.junit.Assert.assertEquals" ],
      "before_after_code_segments" : [ "initEvoSuiteFramework", "clearEvoSuiteFramework", "initTestCase", "doneWithTestCase" ]
    }
  },
  "test_generation_tool" : "EvoSuiteTestGenerator"
}